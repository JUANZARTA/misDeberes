{"ast":null,"code":"import { __decorate } from \"tslib\";\n// Componente para visualizar, agregar, editar y eliminar tipos de tarea en la vista principal\nimport { Component } from '@angular/core';\nlet HomeComponent = class HomeComponent {\n  constructor(taskTypeService, router) {\n    this.taskTypeService = taskTypeService;\n    this.router = router;\n    this.taskTypes = [];\n    this.isModalOpen = false;\n    this.newTaskType = '';\n  }\n  ngOnInit() {\n    this.loadTaskTypes();\n  }\n  // Obtener tipos de tarea desde el servicio\n  loadTaskTypes() {\n    this.taskTypeService.getTaskTypes().subscribe(types => {\n      this.taskTypes = types;\n    });\n  }\n  // Abrir modal para agregar nuevo tipo\n  openModal() {\n    this.isModalOpen = true;\n  }\n  // Cerrar modal y limpiar campo\n  closeModal() {\n    this.isModalOpen = false;\n    this.newTaskType = '';\n  }\n  // Agregar nuevo tipo de tarea\n  addTaskType() {\n    if (this.newTaskType.trim()) {\n      this.taskTypeService.addTaskType(this.newTaskType).then(() => {\n        this.loadTaskTypes();\n        this.closeModal();\n      });\n    }\n  }\n  // Ir a la vista del tipo seleccionado\n  enterTaskType(type) {\n    this.router.navigate(['/app/category', type]);\n  }\n  // Editar nombre del tipo\n  editTaskType(type) {\n    const newName = prompt('Editar nombre del tipo de tarea:', type);\n    if (newName && newName.trim()) {\n      this.taskTypeService.editTaskType(type, newName).then(() => {\n        this.loadTaskTypes();\n      });\n    }\n  }\n  // Eliminar tipo de tarea\n  deleteTaskType(type) {\n    if (confirm(`¿Deseas eliminar el tipo de tarea \"${type}\"?`)) {\n      this.taskTypeService.deleteTaskType(type).then(() => {\n        this.loadTaskTypes();\n      });\n    }\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: []\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"names":["Component","HomeComponent","constructor","taskTypeService","router","taskTypes","isModalOpen","newTaskType","ngOnInit","loadTaskTypes","getTaskTypes","subscribe","types","openModal","closeModal","addTaskType","trim","then","enterTaskType","type","navigate","editTaskType","newName","prompt","deleteTaskType","confirm","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\Golden Panda\\8) Programacion\\MisDeberes\\misDeberes\\src\\app\\pages\\home\\home.component.ts"],"sourcesContent":["// Componente para visualizar, agregar, editar y eliminar tipos de tarea en la vista principal\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TaskTypeService } from '../../services/';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: []\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  taskTypes: string[] = [];\r\n  isModalOpen = false;\r\n  newTaskType = '';\r\n\r\n  constructor(\r\n    private taskTypeService: TaskTypeService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadTaskTypes();\r\n  }\r\n\r\n  // Obtener tipos de tarea desde el servicio\r\n  loadTaskTypes(): void {\r\n    this.taskTypeService.getTaskTypes().subscribe((types: string[]) => {\r\n      this.taskTypes = types;\r\n    });\r\n  }\r\n\r\n  // Abrir modal para agregar nuevo tipo\r\n  openModal(): void {\r\n    this.isModalOpen = true;\r\n  }\r\n\r\n  // Cerrar modal y limpiar campo\r\n  closeModal(): void {\r\n    this.isModalOpen = false;\r\n    this.newTaskType = '';\r\n  }\r\n\r\n  // Agregar nuevo tipo de tarea\r\n  addTaskType(): void {\r\n    if (this.newTaskType.trim()) {\r\n      this.taskTypeService.addTaskType(this.newTaskType).then(() => {\r\n        this.loadTaskTypes();\r\n        this.closeModal();\r\n      });\r\n    }\r\n  }\r\n\r\n  // Ir a la vista del tipo seleccionado\r\n  enterTaskType(type: string): void {\r\n    this.router.navigate(['/app/category', type]);\r\n  }\r\n\r\n  // Editar nombre del tipo\r\n  editTaskType(type: string): void {\r\n    const newName = prompt('Editar nombre del tipo de tarea:', type);\r\n    if (newName && newName.trim()) {\r\n      this.taskTypeService.editTaskType(type, newName).then(() => {\r\n        this.loadTaskTypes();\r\n      });\r\n    }\r\n  }\r\n\r\n  // Eliminar tipo de tarea\r\n  deleteTaskType(type: string): void {\r\n    if (confirm(`¿Deseas eliminar el tipo de tarea \"${type}\"?`)) {\r\n      this.taskTypeService.deleteTaskType(type).then(() => {\r\n        this.loadTaskTypes();\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAKxBC,YACUC,eAAgC,EAChCC,MAAc;IADd,KAAAD,eAAe,GAAfA,eAAe;IACf,KAAAC,MAAM,GAANA,MAAM;IANhB,KAAAC,SAAS,GAAa,EAAE;IACxB,KAAAC,WAAW,GAAG,KAAK;IACnB,KAAAC,WAAW,GAAG,EAAE;EAKb;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEA;EACAA,aAAaA,CAAA;IACX,IAAI,CAACN,eAAe,CAACO,YAAY,EAAE,CAACC,SAAS,CAAEC,KAAe,IAAI;MAChE,IAAI,CAACP,SAAS,GAAGO,KAAK;IACxB,CAAC,CAAC;EACJ;EAEA;EACAC,SAASA,CAAA;IACP,IAAI,CAACP,WAAW,GAAG,IAAI;EACzB;EAEA;EACAQ,UAAUA,CAAA;IACR,IAAI,CAACR,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,WAAW,GAAG,EAAE;EACvB;EAEA;EACAQ,WAAWA,CAAA;IACT,IAAI,IAAI,CAACR,WAAW,CAACS,IAAI,EAAE,EAAE;MAC3B,IAAI,CAACb,eAAe,CAACY,WAAW,CAAC,IAAI,CAACR,WAAW,CAAC,CAACU,IAAI,CAAC,MAAK;QAC3D,IAAI,CAACR,aAAa,EAAE;QACpB,IAAI,CAACK,UAAU,EAAE;MACnB,CAAC,CAAC;IACJ;EACF;EAEA;EACAI,aAAaA,CAACC,IAAY;IACxB,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,eAAe,EAAED,IAAI,CAAC,CAAC;EAC/C;EAEA;EACAE,YAAYA,CAACF,IAAY;IACvB,MAAMG,OAAO,GAAGC,MAAM,CAAC,kCAAkC,EAAEJ,IAAI,CAAC;IAChE,IAAIG,OAAO,IAAIA,OAAO,CAACN,IAAI,EAAE,EAAE;MAC7B,IAAI,CAACb,eAAe,CAACkB,YAAY,CAACF,IAAI,EAAEG,OAAO,CAAC,CAACL,IAAI,CAAC,MAAK;QACzD,IAAI,CAACR,aAAa,EAAE;MACtB,CAAC,CAAC;IACJ;EACF;EAEA;EACAe,cAAcA,CAACL,IAAY;IACzB,IAAIM,OAAO,CAAC,sCAAsCN,IAAI,IAAI,CAAC,EAAE;MAC3D,IAAI,CAAChB,eAAe,CAACqB,cAAc,CAACL,IAAI,CAAC,CAACF,IAAI,CAAC,MAAK;QAClD,IAAI,CAACR,aAAa,EAAE;MACtB,CAAC,CAAC;IACJ;EACF;CACD;AAjEYR,aAAa,GAAAyB,UAAA,EALzB1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE;CACZ,CAAC,C,EACW5B,aAAa,CAiEzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}