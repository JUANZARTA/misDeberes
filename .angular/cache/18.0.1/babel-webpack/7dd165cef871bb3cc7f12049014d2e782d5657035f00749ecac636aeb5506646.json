{"ast":null,"code":"import { Router } from '@angular/router';\nimport { inject } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nexport const AuthGuard = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  const isLogged = authService.isLoggedIn();\n  if (!isLogged) {\n    router.navigate(['/login']);\n    return false;\n  }\n  return true;\n};","map":{"version":3,"names":["Router","inject","AuthService","AuthGuard","route","state","authService","router","isLogged","isLoggedIn","navigate"],"sources":["E:\\Golden Panda\\8) Programacion\\MisDeberes\\MisDeberes\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivateFn, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { inject } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\nexport const AuthGuard: CanActivateFn = (\r\n  route: ActivatedRouteSnapshot,\r\n  state: RouterStateSnapshot\r\n) => {\r\n  const authService = inject(AuthService);\r\n  const router = inject(Router);\r\n\r\n  const isLogged = authService.isLoggedIn();\r\n\r\n  if (!isLogged) {\r\n    router.navigate(['/login']);\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n"],"mappings":"AACA,SAAwBA,MAAM,QAAqD,iBAAiB;AACpG,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,WAAW,QAAQ,0BAA0B;AAEtD,OAAO,MAAMC,SAAS,GAAkBA,CACtCC,KAA6B,EAC7BC,KAA0B,KACxB;EACF,MAAMC,WAAW,GAAGL,MAAM,CAACC,WAAW,CAAC;EACvC,MAAMK,MAAM,GAAGN,MAAM,CAACD,MAAM,CAAC;EAE7B,MAAMQ,QAAQ,GAAGF,WAAW,CAACG,UAAU,EAAE;EAEzC,IAAI,CAACD,QAAQ,EAAE;IACbD,MAAM,CAACG,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAC3B,OAAO,KAAK;EACd;EAEA,OAAO,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}