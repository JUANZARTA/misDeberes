{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/task.service\";\nimport * as i3 from \"../../services/taskType.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = (a0, a1, a2, a3) => ({\n  \"bg-sky-700 hover:bg-slate-700\": a0,\n  \"bg-orange-600 hover:bg-orange-700\": a1,\n  \"bg-yellow-500 hover:bg-yellow-600\": a2,\n  \"bg-red-600 hover:bg-red-700\": a3\n});\nfunction CategoryComponent_tr_33_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function CategoryComponent_tr_33_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const task_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.openNoteModal(task_r3));\n    });\n    i0.ɵɵtext(1, \"Ver m\\u00E1s\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CategoryComponent_tr_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 19)(1, \"td\", 20);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 21)(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, CategoryComponent_tr_33_button_6_Template, 2, 0, \"button\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 23);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 23)(10, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function CategoryComponent_tr_33_Template_button_click_10_listener() {\n      const task_r3 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.toggleTaskStatus(task_r3));\n    });\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"td\", 23)(13, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function CategoryComponent_tr_33_Template_button_click_13_listener() {\n      const task_r3 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.openEditModal(task_r3));\n    });\n    i0.ɵɵelementStart(14, \"span\", 26);\n    i0.ɵɵtext(15, \"edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function CategoryComponent_tr_33_Template_button_click_16_listener() {\n      const task_r3 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.openDeleteModal(task_r3));\n    });\n    i0.ɵɵelementStart(17, \"span\", 28);\n    i0.ɵɵtext(18, \"delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const task_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r3.nombre);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r3.nota && task_r3.nota.length > 50 ? task_r3.nota.slice(0, 50) + \"...\" : task_r3.nota || \"-\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", task_r3.nota && task_r3.nota.length > 50);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", task_r3.fecha || \"(por definir)\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(6, _c0, task_r3.estado === \"realizado\", task_r3.estado === \"pendiente\", task_r3.estado === \"para hoy\", task_r3.estado === \"no realizado\"));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", task_r3.estado, \" \");\n  }\n}\nfunction CategoryComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"div\", 31)(2, \"h2\", 32);\n    i0.ɵɵtext(3, \"Nueva Tarea\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\", 33);\n    i0.ɵɵtext(5, \"Nombre:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 34);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CategoryComponent_div_34_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r3 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r3.newTask.nombre, $event) || (ctx_r3.newTask.nombre = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"label\", 33);\n    i0.ɵɵtext(8, \"Nota adicional:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"textarea\", 35);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CategoryComponent_div_34_Template_textarea_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r3 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r3.newTask.nota, $event) || (ctx_r3.newTask.nota = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"label\", 33);\n    i0.ɵɵtext(11, \"Fecha (d\\u00EDa):\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 36);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CategoryComponent_div_34_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r3 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r3.newTask.fecha, $event) || (ctx_r3.newTask.fecha = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 37)(14, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function CategoryComponent_div_34_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.closeAddModal());\n    });\n    i0.ɵɵtext(15, \"Cancelar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function CategoryComponent_div_34_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.addTask());\n    });\n    i0.ɵɵtext(17, \"Agregar\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r3.newTask.nombre);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r3.newTask.nota);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r3.newTask.fecha);\n  }\n}\nfunction CategoryComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"div\", 31)(2, \"h2\", 32);\n    i0.ɵɵtext(3, \"Editar Tarea\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\", 33);\n    i0.ɵɵtext(5, \"Nombre:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 34);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CategoryComponent_div_35_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r3 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r3.editedTask.nombre, $event) || (ctx_r3.editedTask.nombre = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"label\", 33);\n    i0.ɵɵtext(8, \"Nota:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"textarea\", 35);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CategoryComponent_div_35_Template_textarea_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r3 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r3.editedTask.nota, $event) || (ctx_r3.editedTask.nota = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"label\", 33);\n    i0.ɵɵtext(11, \"Fecha:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 36);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CategoryComponent_div_35_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r3 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r3.editedTask.fecha, $event) || (ctx_r3.editedTask.fecha = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 37)(14, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function CategoryComponent_div_35_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.closeEditModal());\n    });\n    i0.ɵɵtext(15, \"Cancelar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 40);\n    i0.ɵɵlistener(\"click\", function CategoryComponent_div_35_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.saveTaskEdit());\n    });\n    i0.ɵɵtext(17, \" Guardar \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r3.editedTask.nombre);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r3.editedTask.nota);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r3.editedTask.fecha);\n  }\n}\nfunction CategoryComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"div\", 41)(2, \"span\", 42);\n    i0.ɵɵtext(3, \" report_problem \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h2\", 43);\n    i0.ɵɵtext(5, \"\\u00BFEliminar Tarea?\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 44);\n    i0.ɵɵtext(7, \"\\u00BFEst\\u00E1s seguro de eliminar esta tarea? Esta acci\\u00F3n no se puede deshacer.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 45)(9, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function CategoryComponent_div_36_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.closeDeleteModal());\n    });\n    i0.ɵɵtext(10, \"Cancelar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 47);\n    i0.ɵɵlistener(\"click\", function CategoryComponent_div_36_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.confirmDeleteTask());\n    });\n    i0.ɵɵtext(12, \" Eliminar \");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction CategoryComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"div\", 31)(2, \"h2\", 32);\n    i0.ɵɵtext(3, \"Editar Nota\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"textarea\", 48);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CategoryComponent_div_37_Template_textarea_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r3 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r3.selectedTask.nota, $event) || (ctx_r3.selectedTask.nota = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 37)(6, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function CategoryComponent_div_37_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.closeNoteModal());\n    });\n    i0.ɵɵtext(7, \"Cerrar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function CategoryComponent_div_37_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.saveNote());\n    });\n    i0.ɵɵtext(9, \"Guardar\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r3.selectedTask.nota);\n  }\n}\nexport let CategoryComponent = /*#__PURE__*/(() => {\n  class CategoryComponent {\n    constructor(route, router, taskService, taskTypeService) {\n      this.route = route;\n      this.router = router;\n      this.taskService = taskService;\n      this.taskTypeService = taskTypeService;\n      // Nombre del tipo de tarea actual (clave Firebase)\n      this.taskTypeName = '';\n      this.taskTypeDisplayName = '';\n      this.editedOriginalName = '';\n      // Modal de edición\n      this.isEditModalOpen = false;\n      this.editedTask = {};\n      // Agregar una propiedad para la tarea seleccionada\n      this.selectedTask = null;\n      // Modal de edición de nota\n      this.isNoteModalOpen = false;\n      // Modal de eliminación\n      this.isDeleteModalOpen = false;\n      this.taskToDeleteKey = '';\n      // Lista de tareas cargadas\n      this.tasks = [];\n      // Estado para el modal de agregar\n      this.isAddModalOpen = false;\n      // Tarea nueva temporal\n      this.newTask = {\n        nombre: '',\n        nota: '',\n        fecha: '',\n        estado: 'pendiente'\n      };\n    }\n    // Carga inicial del tipo de tarea y sus tareas asociadas\n    ngOnInit() {\n      this.taskTypeName = this.route.snapshot.paramMap.get('name') || '';\n      console.log('[INIT] Tareas para tipo:', this.taskTypeName);\n      this.loadTasks();\n      this.loadTaskTypeDisplayName();\n    }\n    // Carga y ajusta estados de las tareas automáticamente\n    loadTasks() {\n      this.taskService.getTasks(this.taskTypeName).subscribe({\n        next: tasks => {\n          const hoy = new Date();\n          const hoyFecha = new Date(hoy.getFullYear(), hoy.getMonth(), hoy.getDate()); // hoy a las 00:00\n          console.log('[DEBUG] Fecha actual local:', hoy.toISOString(), '| Solo fecha:', hoyFecha.toDateString());\n          this.tasks = tasks.map(task => {\n            if (task.estado === 'realizado') return task;\n            if (!task.fecha) {\n              task.estado = 'pendiente';\n            } else {\n              const fechaTarea = this.parseFechaLocal(task.fecha);\n              console.log('[DEBUG] Tarea:', task.nombre, '| Fecha tarea:', fechaTarea.toDateString());\n              if (fechaTarea.getTime() === hoyFecha.getTime()) {\n                task.estado = 'para hoy';\n              } else if (fechaTarea.getTime() < hoyFecha.getTime()) {\n                task.estado = 'no realizado';\n              } else {\n                task.estado = 'pendiente';\n              }\n            }\n            return task;\n          });\n          // Guardar los cambios en Firebase\n          this.tasks.forEach(task => {\n            const key = task.nombre.trim().toLowerCase().replace(/\\s+/g, '_'); // Puedes hacer esta parte si la necesitas para claves únicas\n            task.nombre = key; // Actualiza el nombre de la tarea antes de enviarla, si es necesario\n            // Ahora solo debes pasar el objeto task directamente\n            this.taskService.updateTask(task).subscribe({\n              next: () => {\n                console.log('[TAREAS] Actualizada tarea:', task);\n              },\n              error: err => console.error('[ERROR] Al actualizar tarea:', err)\n            });\n          });\n        }\n        // Regresa al home\n        ,\n\n        // Regresa al home\n        goBack() {\n          this.router.navigate(['/app/home']);\n        }\n        // Cambia el estado de la tarea y lo guarda en Firebase\n        ,\n\n        // Cambia el estado de la tarea y lo guarda en Firebase\n        toggleTaskStatus(task) {\n          const estados = ['pendiente', 'para hoy', 'realizado', 'no realizado'];\n          const actual = task.estado;\n          const index = estados.indexOf(actual);\n          const siguiente = estados[(index + 1) % estados.length];\n          const updatedTask = {\n            ...task,\n            estado: siguiente\n          };\n          // Actualizar solo con el objeto `updatedTask`\n          this.taskService.updateTask(updatedTask).subscribe({\n            next: () => this.loadTasks(),\n            error: err => console.error('[ERROR] Al cambiar estado:', err)\n          });\n        }\n        // Abre el modal para nueva tarea\n        ,\n\n        // Abre el modal para nueva tarea\n        openAddModal() {\n          this.isAddModalOpen = true;\n          this.newTask = {\n            nombre: '',\n            nota: '',\n            fecha: '',\n            estado: 'pendiente'\n          };\n        }\n        // Cierra el modal de nueva tarea\n        ,\n\n        // Cierra el modal de nueva tarea\n        closeAddModal() {\n          this.isAddModalOpen = false;\n          this.newTask = {\n            nombre: '',\n            nota: '',\n            fecha: '',\n            estado: 'pendiente'\n          };\n        }\n        // Agrega una nueva tarea a Firebase\n        ,\n\n        // Agrega una nueva tarea a Firebase\n        addTask() {\n          if (!this.newTask.nombre.trim()) return;\n          this.taskService.addTask(this.taskTypeName, this.newTask).subscribe({\n            next: () => {\n              this.loadTasks();\n              this.closeAddModal();\n            },\n            error: err => console.error('[ERROR] Al agregar tarea:', err)\n          });\n        }\n        // Abre modal de edición (por implementar)\n        ,\n\n        // Abre modal de edición (por implementar)\n        openEditModal(task) {\n          this.editedTask = {\n            ...task\n          }; // copia los datos de la tarea\n          this.editedOriginalName = task.nombre; // guarda el nombre original\n          this.isEditModalOpen = true;\n        }\n        // Confirma la edición de la tarea seleccionada\n        ,\n\n        // Confirma la edición de la tarea seleccionada\n        saveTaskEdit() {\n          if (!this.editedTask?.nombre?.trim()) return;\n          const newKey = this.editedTask.nombre.trim().toLowerCase().replace(/\\s+/g, '_');\n          const oldKey = this.editedOriginalName.trim().toLowerCase().replace(/\\s+/g, '_');\n          // Si cambió el nombre (key), eliminamos el anterior\n          if (newKey !== oldKey) {\n            this.taskService.deleteTask(this.taskTypeName, oldKey).subscribe();\n          }\n          // Cambiar la llamada a updateTask para pasar solo un argumento `task`\n          this.editedTask.nombre = newKey; // Actualizamos la clave del nombre de la tarea\n          this.taskService.updateTask(this.editedTask).subscribe({\n            next: () => {\n              this.loadTasks();\n              this.closeEditModal();\n            },\n            error: err => console.error('[ERROR] Al editar tarea:', err)\n          });\n        }\n        // Cierra el modal de edición\n        ,\n\n        // Cierra el modal de edición\n        closeEditModal() {\n          this.isEditModalOpen = false;\n          this.editedTask = {};\n        }\n        // Abre modal de eliminación (por implementar)\n        ,\n\n        // Abre modal de eliminación (por implementar)\n        openDeleteModal(task) {\n          this.taskToDeleteKey = task.nombre;\n          this.isDeleteModalOpen = true;\n        }\n        // Confirma la eliminación de la tarea seleccionada\n        ,\n\n        // Confirma la eliminación de la tarea seleccionada\n        confirmDeleteTask() {\n          this.taskService.deleteTask(this.taskTypeName, this.taskToDeleteKey).subscribe({\n            next: () => {\n              this.loadTasks();\n              this.closeDeleteModal();\n            },\n            error: err => console.error('[ERROR] Al eliminar tarea:', err)\n          });\n        }\n        // Cierra el modal de eliminación\n        ,\n\n        // Cierra el modal de eliminación\n        closeDeleteModal() {\n          this.taskToDeleteKey = '';\n          this.isDeleteModalOpen = false;\n        }\n        // Carga el nombre visual del tipo de tarea desde Firebase\n        ,\n\n        // Carga el nombre visual del tipo de tarea desde Firebase\n        loadTaskTypeDisplayName() {\n          this.taskTypeService.getAllTaskTypes().subscribe({\n            next: types => {\n              const match = types.find(t => t.key === this.taskTypeName);\n              this.taskTypeDisplayName = match?.nombre || this.taskTypeName;\n            },\n            error: err => console.error('[ERROR] Al obtener nombre visual:', err)\n          });\n        }\n        // Cambia el estado de la tarea y lo guarda en Firebase\n        ,\n\n        // Cambia el estado de la tarea y lo guarda en Firebase\n        changeTaskStatus(task) {\n          // Actualizar solo con el objeto `task`\n          this.taskService.updateTask(task).subscribe({\n            next: () => this.loadTasks(),\n            error: err => console.error('[ERROR] Al actualizar estado:', err)\n          });\n        }\n        // Devuelve clase de color según estado y fecha\n        ,\n\n        // Devuelve clase de color según estado y fecha\n        getEstadoColor(task) {\n          const hoy = new Date();\n          const fechaTarea = task.fecha ? new Date(task.fecha) : null;\n          if (task.estado === 'realizado') return 'bg-teal-600';\n          if (task.estado === 'para hoy') return 'bg-orange-600';\n          if (task.estado === 'no realizado' && fechaTarea && fechaTarea < hoy) return 'bg-red-600';\n          return 'bg-slate-500'; // pendiente u otro\n        }\n        // Parsea un string yyyy-MM-dd como fecha local sin zona horaria\n        ,\n\n        // Parsea un string yyyy-MM-dd como fecha local sin zona horaria\n        parseFechaLocal(fechaStr) {\n          const [year, month, day] = fechaStr.split('-').map(Number);\n          return new Date(year, month - 1, day); // mes va de 0-11\n        }\n        // Abrir el modal de la nota completa\n        ,\n\n        // Abrir el modal de la nota completa\n        openNoteModal(task) {\n          this.selectedTask = {\n            ...task\n          }; // Asegúrate de que task tenga la propiedad 'nota'\n          this.isNoteModalOpen = true;\n        }\n        // Cerrar el modal de la nota\n        ,\n\n        // Cerrar el modal de la nota\n        closeNoteModal() {\n          this.isNoteModalOpen = false;\n          this.selectedTask = null;\n        }\n        // Guardar la nota editada\n        ,\n\n        // Guardar la nota editada\n        saveNote() {\n          if (!this.selectedTask?.nota) return;\n          // Guardar la tarea con la nueva nota\n          this.taskService.updateTask(this.selectedTask).subscribe({\n            next: () => {\n              this.loadTasks(); // Recargar las tareas\n              this.closeNoteModal();\n            },\n            error: err => console.error('[ERROR] Al guardar la nota:', err)\n          });\n        }\n      });\n    }\n    static #_ = this.ɵfac = function CategoryComponent_Factory(t) {\n      return new (t || CategoryComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.TaskService), i0.ɵɵdirectiveInject(i3.TaskTypeService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CategoryComponent,\n      selectors: [[\"app-category\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 38,\n      vars: 6,\n      consts: [[1, \"mb-6\", \"grid\", \"grid-cols-1\", \"xl:grid-cols-1\", \"gap-6\"], [1, \"relative\", \"flex\", \"flex-col\", \"bg-white\", \"rounded-xl\", \"shadow-lg\", \"overflow-hidden\", \"border\", \"border-gray-200\"], [1, \"flex\", \"items-center\", \"justify-between\", \"p-6\", \"bg-gradient-to-r\", \"from-sky-800\", \"to-sky-800\", \"text-white\", \"rounded-t-xl\", \"shadow-md\"], [1, \"text-xl\", \"font-bold\", \"tracking-wide\"], [1, \"text-sm\", \"flex\", \"items-center\", \"gap-2\", \"opacity-90\"], [1, \"text-xl\"], [1, \"flex\", \"gap-3\", \"items-center\"], [1, \"text-white\", \"hover:underline\", \"flex\", \"items-center\", \"gap-1\", 3, \"click\"], [1, \"material-icons\"], [1, \"bg-white\", \"text-sky-800\", \"px-4\", \"py-2\", \"rounded-md\", \"shadow-md\", \"hover:bg-slate-200\", \"transition\", \"font-semibold\", \"flex\", \"items-center\", \"gap-2\", 3, \"click\"], [1, \"material-icons\", \"text-sky-800\"], [1, \"overflow-x-auto\"], [1, \"w-full\", \"min-w-[640px]\", \"border-collapse\"], [1, \"bg-gray-100\"], [1, \"border-b\"], [1, \"py-4\", \"px-6\", \"text-left\", \"text-xs\", \"font-semibold\", \"uppercase\", \"text-gray-600\"], [1, \"py-4\", \"px-6\", \"text-center\", \"text-xs\", \"font-semibold\", \"uppercase\", \"text-gray-600\"], [\"class\", \"border-b transition duration-300 hover:bg-gray-50\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"fixed inset-0 flex items-center justify-center bg-black bg-opacity-40 z-50\", 4, \"ngIf\"], [1, \"border-b\", \"transition\", \"duration-300\", \"hover:bg-gray-50\"], [1, \"py-4\", \"px-6\", \"font-semibold\"], [1, \"py-4\", \"px-6\", \"text-gray-700\"], [\"class\", \"text-blue-500 text-xs underline ml-2\", 3, \"click\", 4, \"ngIf\"], [1, \"py-4\", \"px-6\", \"text-center\"], [1, \"px-3\", \"py-1\", \"text-xs\", \"font-semibold\", \"rounded-full\", \"transition\", \"duration-300\", 3, \"click\", \"ngClass\"], [1, \"text-sky-700\", \"text-xl\", 3, \"click\"], [1, \"material-icons\", \"text-sky-700\"], [1, \"text-orange-600\", \"text-xl\", 3, \"click\"], [1, \"material-icons\", \"text-orange-600\"], [1, \"text-blue-500\", \"text-xs\", \"underline\", \"ml-2\", 3, \"click\"], [1, \"fixed\", \"inset-0\", \"flex\", \"items-center\", \"justify-center\", \"bg-black\", \"bg-opacity-40\", \"z-50\"], [1, \"bg-white\", \"p-6\", \"rounded-lg\", \"shadow-lg\", \"w-96\"], [1, \"text-xl\", \"font-bold\", \"mb-4\"], [1, \"block\", \"mb-1\", \"font-medium\"], [\"type\", \"text\", 1, \"w-full\", \"p-2\", \"border\", \"rounded\", \"mb-4\", 3, \"ngModelChange\", \"ngModel\"], [\"rows\", \"2\", 1, \"w-full\", \"p-2\", \"border\", \"rounded\", \"mb-4\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"date\", 1, \"w-full\", \"p-2\", \"border\", \"rounded\", \"mb-4\", 3, \"ngModelChange\", \"ngModel\"], [1, \"flex\", \"justify-end\", \"gap-2\"], [1, \"px-4\", \"py-2\", \"border\", \"rounded-md\", \"hover:bg-slate-200\", 3, \"click\"], [1, \"px-4\", \"py-2\", \"bg-green-600\", \"text-white\", \"rounded-md\", \"hover:bg-green-700\", 3, \"click\"], [1, \"px-4\", \"py-2\", \"bg-sky-700\", \"text-white\", \"rounded-md\", \"hover:bg-sky-800\", 3, \"click\"], [1, \"bg-white\", \"p-6\", \"rounded-lg\", \"shadow-lg\", \"w-80\", \"text-center\"], [1, \"material-icons\", \"text-red-600\", \"mx-auto\", \"mb-4\", 2, \"font-size\", \"48px\"], [1, \"text-xl\", \"font-bold\", \"mt-4\", \"mb-2\"], [1, \"mb-6\", \"text-gray-700\"], [1, \"flex\", \"justify-center\", \"gap-2\"], [1, \"px-4\", \"py-2\", \"border\", \"rounded-md\", \"hover:bg-orange-200\", 3, \"click\"], [1, \"px-4\", \"py-2\", \"bg-orange-600\", \"text-white\", \"rounded-md\", \"hover:bg-red-600\", 3, \"click\"], [\"rows\", \"4\", 1, \"w-full\", \"p-2\", \"border\", \"rounded\", \"mb-4\", 3, \"ngModelChange\", \"ngModel\"]],\n      template: function CategoryComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\")(4, \"h6\", 3);\n          i0.ɵɵtext(5, \"Tareas\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"p\", 4)(7, \"strong\", 5);\n          i0.ɵɵtext(8);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(9, \"div\", 6)(10, \"button\", 7);\n          i0.ɵɵlistener(\"click\", function CategoryComponent_Template_button_click_10_listener() {\n            return ctx.goBack();\n          });\n          i0.ɵɵelementStart(11, \"span\", 8);\n          i0.ɵɵtext(12, \"arrow_back\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(13, \" Regresar \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function CategoryComponent_Template_button_click_14_listener() {\n            return ctx.openAddModal();\n          });\n          i0.ɵɵelementStart(15, \"span\", 10);\n          i0.ɵɵtext(16, \"add\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(17, \" Agregar \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(18, \"div\", 11)(19, \"table\", 12)(20, \"thead\", 13)(21, \"tr\", 14)(22, \"th\", 15);\n          i0.ɵɵtext(23, \"Nombre\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"th\", 15);\n          i0.ɵɵtext(25, \"Nota\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"th\", 16);\n          i0.ɵɵtext(27, \"Fecha\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"th\", 16);\n          i0.ɵɵtext(29, \"Estado\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"th\", 16);\n          i0.ɵɵtext(31, \"Acciones\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(32, \"tbody\");\n          i0.ɵɵtemplate(33, CategoryComponent_tr_33_Template, 19, 11, \"tr\", 17);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(34, CategoryComponent_div_34_Template, 18, 3, \"div\", 18)(35, CategoryComponent_div_35_Template, 18, 3, \"div\", 18)(36, CategoryComponent_div_36_Template, 13, 0, \"div\", 18)(37, CategoryComponent_div_37_Template, 10, 1, \"div\", 18);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate(ctx.taskTypeDisplayName);\n          i0.ɵɵadvance(25);\n          i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isAddModalOpen);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isEditModalOpen);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isDeleteModalOpen);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isNoteModalOpen);\n        }\n      },\n      dependencies: [CommonModule, i4.NgClass, i4.NgForOf, i4.NgIf, FormsModule, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n      encapsulation: 2\n    });\n  }\n  return CategoryComponent;\n})();","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵlistener","CategoryComponent_tr_33_button_6_Template_button_click_0_listener","ɵɵrestoreView","_r2","task_r3","ɵɵnextContext","$implicit","ctx_r3","ɵɵresetView","openNoteModal","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","CategoryComponent_tr_33_button_6_Template","CategoryComponent_tr_33_Template_button_click_10_listener","_r1","toggleTaskStatus","CategoryComponent_tr_33_Template_button_click_13_listener","openEditModal","CategoryComponent_tr_33_Template_button_click_16_listener","openDeleteModal","ɵɵadvance","ɵɵtextInterpolate","nombre","nota","length","slice","ɵɵproperty","ɵɵtextInterpolate1","fecha","ɵɵpureFunction4","_c0","estado","ɵɵtwoWayListener","CategoryComponent_div_34_Template_input_ngModelChange_6_listener","$event","_r5","ɵɵtwoWayBindingSet","newTask","CategoryComponent_div_34_Template_textarea_ngModelChange_9_listener","CategoryComponent_div_34_Template_input_ngModelChange_12_listener","CategoryComponent_div_34_Template_button_click_14_listener","closeAddModal","CategoryComponent_div_34_Template_button_click_16_listener","addTask","ɵɵtwoWayProperty","CategoryComponent_div_35_Template_input_ngModelChange_6_listener","_r6","editedTask","CategoryComponent_div_35_Template_textarea_ngModelChange_9_listener","CategoryComponent_div_35_Template_input_ngModelChange_12_listener","CategoryComponent_div_35_Template_button_click_14_listener","closeEditModal","CategoryComponent_div_35_Template_button_click_16_listener","saveTaskEdit","CategoryComponent_div_36_Template_button_click_9_listener","_r7","closeDeleteModal","CategoryComponent_div_36_Template_button_click_11_listener","confirmDeleteTask","CategoryComponent_div_37_Template_textarea_ngModelChange_4_listener","_r8","selectedTask","CategoryComponent_div_37_Template_button_click_6_listener","closeNoteModal","CategoryComponent_div_37_Template_button_click_8_listener","saveNote","CategoryComponent","constructor","route","router","taskService","taskTypeService","taskTypeName","taskTypeDisplayName","editedOriginalName","isEditModalOpen","isNoteModalOpen","isDeleteModalOpen","taskToDeleteKey","tasks","isAddModalOpen","ngOnInit","snapshot","paramMap","get","console","log","loadTasks","loadTaskTypeDisplayName","getTasks","subscribe","next","hoy","Date","hoyFecha","getFullYear","getMonth","getDate","toISOString","toDateString","map","task","fechaTarea","parseFechaLocal","getTime","forEach","key","trim","toLowerCase","replace","updateTask","error","err","goBack","navigate","estados","actual","index","indexOf","siguiente","updatedTask","openAddModal","newKey","oldKey","deleteTask","getAllTaskTypes","types","match","find","t","changeTaskStatus","getEstadoColor","fechaStr","year","month","day","split","Number","_","ɵɵdirectiveInject","i1","ActivatedRoute","Router","i2","TaskService","i3","TaskTypeService","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","CategoryComponent_Template","rf","ctx","CategoryComponent_Template_button_click_10_listener","CategoryComponent_Template_button_click_14_listener","CategoryComponent_tr_33_Template","CategoryComponent_div_34_Template","CategoryComponent_div_35_Template","CategoryComponent_div_36_Template","CategoryComponent_div_37_Template","i4","NgClass","NgForOf","NgIf","i5","DefaultValueAccessor","NgControlStatus","NgModel","encapsulation"],"sources":["E:\\Golden Panda\\8) Programacion\\MisDeberes\\MisDeberes\\src\\app\\pages\\category\\category.component.ts","E:\\Golden Panda\\8) Programacion\\MisDeberes\\MisDeberes\\src\\app\\pages\\category\\category.component.html"],"sourcesContent":["// Componente para mostrar las tareas de un tipo de deber\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TaskService } from '../../services/task.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TaskTypeService } from '../../services/taskType.service';\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  standalone: true,\r\n  templateUrl: './category.component.html',\r\n  styleUrls: [],\r\n  imports: [CommonModule, FormsModule],\r\n})\r\nexport class CategoryComponent {\r\n  // Nombre del tipo de tarea actual (clave Firebase)\r\n  taskTypeName: string = '';\r\n  taskTypeDisplayName: string = '';\r\n  editedOriginalName: string = '';\r\n\r\n  // Modal de edición\r\n  isEditModalOpen: boolean = false;\r\n  editedTask: any = {};\r\n  // Agregar una propiedad para la tarea seleccionada\r\n  selectedTask: any = null;\r\n\r\n  // Modal de edición de nota\r\n  isNoteModalOpen: boolean = false;\r\n  // Modal de eliminación\r\n  isDeleteModalOpen: boolean = false;\r\n  taskToDeleteKey: string = '';\r\n\r\n  // Lista de tareas cargadas\r\n  tasks: {\r\n    nombre: string;\r\n    nota?: string;\r\n    fecha?: string;\r\n    estado: 'realizado' | 'pendiente' | 'no realizado' | 'para hoy';\r\n  }[] = [];\r\n\r\n  // Estado para el modal de agregar\r\n  isAddModalOpen: boolean = false;\r\n\r\n  // Tarea nueva temporal\r\n  newTask = {\r\n    nombre: '',\r\n    nota: '',\r\n    fecha: '',\r\n    estado: 'pendiente' as\r\n      | 'pendiente'\r\n      | 'realizado'\r\n      | 'no realizado'\r\n      | 'para hoy',\r\n  };\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private taskService: TaskService,\r\n    private taskTypeService: TaskTypeService\r\n  ) {}\r\n\r\n  // Carga inicial del tipo de tarea y sus tareas asociadas\r\n  ngOnInit(): void {\r\n    this.taskTypeName = this.route.snapshot.paramMap.get('name') || '';\r\n    console.log('[INIT] Tareas para tipo:', this.taskTypeName);\r\n    this.loadTasks();\r\n    this.loadTaskTypeDisplayName();\r\n  }\r\n\r\n  // Carga y ajusta estados de las tareas automáticamente\r\n  loadTasks(): void {\r\n    this.taskService.getTasks(this.taskTypeName).subscribe({\r\n      next: (tasks) => {\r\n        const hoy = new Date();\r\n        const hoyFecha = new Date(\r\n          hoy.getFullYear(),\r\n          hoy.getMonth(),\r\n          hoy.getDate()\r\n        ); // hoy a las 00:00\r\n\r\n        console.log(\r\n          '[DEBUG] Fecha actual local:',\r\n          hoy.toISOString(),\r\n          '| Solo fecha:',\r\n          hoyFecha.toDateString()\r\n        );\r\n\r\n        this.tasks = tasks.map((task) => {\r\n          if (task.estado === 'realizado') return task;\r\n\r\n          if (!task.fecha) {\r\n            task.estado = 'pendiente';\r\n          } else {\r\n            const fechaTarea = this.parseFechaLocal(task.fecha);\r\n            console.log(\r\n              '[DEBUG] Tarea:',\r\n              task.nombre,\r\n              '| Fecha tarea:',\r\n              fechaTarea.toDateString()\r\n            );\r\n\r\n            if (fechaTarea.getTime() === hoyFecha.getTime()) {\r\n              task.estado = 'para hoy';\r\n            } else if (fechaTarea.getTime() < hoyFecha.getTime()) {\r\n              task.estado = 'no realizado';\r\n            } else {\r\n              task.estado = 'pendiente';\r\n            }\r\n          }\r\n\r\n          return task;\r\n        });\r\n\r\n        // Guardar los cambios en Firebase\r\n        this.tasks.forEach((task) => {\r\n          const key = task.nombre.trim().toLowerCase().replace(/\\s+/g, '_'); // Puedes hacer esta parte si la necesitas para claves únicas\r\n          task.nombre = key; // Actualiza el nombre de la tarea antes de enviarla, si es necesario\r\n\r\n          // Ahora solo debes pasar el objeto task directamente\r\n          this.taskService.updateTask(task).subscribe({\r\n            next: () => {\r\n              console.log('[TAREAS] Actualizada tarea:', task);\r\n            },\r\n            error: (err) => console.error('[ERROR] Al actualizar tarea:', err),\r\n          });\r\n        });\r\n  }\r\n\r\n  // Regresa al home\r\n  goBack(): void {\r\n    this.router.navigate(['/app/home']);\r\n  }\r\n\r\n  // Cambia el estado de la tarea y lo guarda en Firebase\r\n  toggleTaskStatus(task: any): void {\r\n    const estados = ['pendiente', 'para hoy', 'realizado', 'no realizado'];\r\n    const actual = task.estado;\r\n    const index = estados.indexOf(actual);\r\n    const siguiente = estados[(index + 1) % estados.length];\r\n\r\n    const updatedTask = { ...task, estado: siguiente };\r\n\r\n    // Actualizar solo con el objeto `updatedTask`\r\n    this.taskService.updateTask(updatedTask).subscribe({\r\n      next: () => this.loadTasks(),\r\n      error: (err) => console.error('[ERROR] Al cambiar estado:', err),\r\n    });\r\n  }\r\n\r\n\r\n  // Abre el modal para nueva tarea\r\n  openAddModal(): void {\r\n    this.isAddModalOpen = true;\r\n    this.newTask = {\r\n      nombre: '',\r\n      nota: '',\r\n      fecha: '',\r\n      estado: 'pendiente',\r\n    };\r\n  }\r\n\r\n  // Cierra el modal de nueva tarea\r\n  closeAddModal(): void {\r\n    this.isAddModalOpen = false;\r\n    this.newTask = {\r\n      nombre: '',\r\n      nota: '',\r\n      fecha: '',\r\n      estado: 'pendiente',\r\n    };\r\n  }\r\n\r\n  // Agrega una nueva tarea a Firebase\r\n  addTask(): void {\r\n    if (!this.newTask.nombre.trim()) return;\r\n\r\n    this.taskService.addTask(this.taskTypeName, this.newTask).subscribe({\r\n      next: () => {\r\n        this.loadTasks();\r\n        this.closeAddModal();\r\n      },\r\n      error: (err) => console.error('[ERROR] Al agregar tarea:', err),\r\n    });\r\n  }\r\n\r\n  // Abre modal de edición (por implementar)\r\n  openEditModal(task: any): void {\r\n    this.editedTask = { ...task }; // copia los datos de la tarea\r\n    this.editedOriginalName = task.nombre; // guarda el nombre original\r\n    this.isEditModalOpen = true;\r\n  }\r\n\r\n  // Confirma la edición de la tarea seleccionada\r\n  saveTaskEdit(): void {\r\n    if (!this.editedTask?.nombre?.trim()) return;\r\n\r\n    const newKey = this.editedTask.nombre\r\n      .trim()\r\n      .toLowerCase()\r\n      .replace(/\\s+/g, '_');\r\n    const oldKey = this.editedOriginalName\r\n      .trim()\r\n      .toLowerCase()\r\n      .replace(/\\s+/g, '_');\r\n\r\n    // Si cambió el nombre (key), eliminamos el anterior\r\n    if (newKey !== oldKey) {\r\n      this.taskService.deleteTask(this.taskTypeName, oldKey).subscribe();\r\n    }\r\n\r\n    // Cambiar la llamada a updateTask para pasar solo un argumento `task`\r\n    this.editedTask.nombre = newKey; // Actualizamos la clave del nombre de la tarea\r\n    this.taskService.updateTask(this.editedTask).subscribe({\r\n      next: () => {\r\n        this.loadTasks();\r\n        this.closeEditModal();\r\n      },\r\n      error: (err) => console.error('[ERROR] Al editar tarea:', err),\r\n    });\r\n  }\r\n\r\n  // Cierra el modal de edición\r\n  closeEditModal(): void {\r\n    this.isEditModalOpen = false;\r\n    this.editedTask = {};\r\n  }\r\n\r\n  // Abre modal de eliminación (por implementar)\r\n  openDeleteModal(task: any): void {\r\n    this.taskToDeleteKey = task.nombre;\r\n    this.isDeleteModalOpen = true;\r\n  }\r\n  // Confirma la eliminación de la tarea seleccionada\r\n  confirmDeleteTask(): void {\r\n    this.taskService\r\n      .deleteTask(this.taskTypeName, this.taskToDeleteKey)\r\n      .subscribe({\r\n        next: () => {\r\n          this.loadTasks();\r\n          this.closeDeleteModal();\r\n        },\r\n        error: (err) => console.error('[ERROR] Al eliminar tarea:', err),\r\n      });\r\n  }\r\n  // Cierra el modal de eliminación\r\n  closeDeleteModal(): void {\r\n    this.taskToDeleteKey = '';\r\n    this.isDeleteModalOpen = false;\r\n  }\r\n\r\n  // Carga el nombre visual del tipo de tarea desde Firebase\r\n  loadTaskTypeDisplayName(): void {\r\n    this.taskTypeService.getAllTaskTypes().subscribe({\r\n      next: (types) => {\r\n        const match = types.find((t) => t.key === this.taskTypeName);\r\n        this.taskTypeDisplayName = match?.nombre || this.taskTypeName;\r\n      },\r\n      error: (err) => console.error('[ERROR] Al obtener nombre visual:', err),\r\n    });\r\n  }\r\n\r\n  // Cambia el estado de la tarea y lo guarda en Firebase\r\n  changeTaskStatus(task: any): void {\r\n    // Actualizar solo con el objeto `task`\r\n    this.taskService.updateTask(task).subscribe({\r\n      next: () => this.loadTasks(),\r\n      error: (err) => console.error('[ERROR] Al actualizar estado:', err),\r\n    });\r\n  }\r\n\r\n  // Devuelve clase de color según estado y fecha\r\n  getEstadoColor(task: any): string {\r\n    const hoy = new Date();\r\n    const fechaTarea = task.fecha ? new Date(task.fecha) : null;\r\n\r\n    if (task.estado === 'realizado') return 'bg-teal-600';\r\n    if (task.estado === 'para hoy') return 'bg-orange-600';\r\n    if (task.estado === 'no realizado' && fechaTarea && fechaTarea < hoy)\r\n      return 'bg-red-600';\r\n    return 'bg-slate-500'; // pendiente u otro\r\n  }\r\n\r\n  // Parsea un string yyyy-MM-dd como fecha local sin zona horaria\r\n  parseFechaLocal(fechaStr: string): Date {\r\n    const [year, month, day] = fechaStr.split('-').map(Number);\r\n    return new Date(year, month - 1, day); // mes va de 0-11\r\n  }\r\n\r\n  // Abrir el modal de la nota completa\r\n  openNoteModal(task: any): void {\r\n    this.selectedTask = { ...task }; // Asegúrate de que task tenga la propiedad 'nota'\r\n    this.isNoteModalOpen = true;\r\n  }\r\n\r\n  // Cerrar el modal de la nota\r\n  closeNoteModal(): void {\r\n    this.isNoteModalOpen = false;\r\n    this.selectedTask = null;\r\n  }\r\n\r\n  // Guardar la nota editada\r\n  saveNote(): void {\r\n    if (!this.selectedTask?.nota) return;\r\n\r\n    // Guardar la tarea con la nueva nota\r\n    this.taskService.updateTask(this.selectedTask).subscribe({\r\n      next: () => {\r\n        this.loadTasks(); // Recargar las tareas\r\n        this.closeNoteModal();\r\n      },\r\n      error: (err) => console.error('[ERROR] Al guardar la nota:', err),\r\n    });\r\n  }\r\n\r\n}\r\n","<!-- Contenedor principal -->\r\n<div class=\"mb-6 grid grid-cols-1 xl:grid-cols-1 gap-6 \">\r\n  <div class=\"relative flex flex-col bg-white rounded-xl shadow-lg overflow-hidden border border-gray-200\">\r\n\r\n    <!-- Header -->\r\n    <div\r\n      class=\"flex items-center justify-between p-6 bg-gradient-to-r from-sky-800 to-sky-800 text-white rounded-t-xl shadow-md\">\r\n      <div>\r\n        <h6 class=\"text-xl font-bold tracking-wide\">Tareas</h6>\r\n        <p class=\"text-sm flex items-center gap-2 opacity-90\">\r\n          <strong class=\"text-xl\">{{ taskTypeDisplayName }}</strong>\r\n        </p>\r\n      </div>\r\n      <div class=\"flex gap-3 items-center\">\r\n        <!-- Botón para agregar tarea (mismo estilo que MiCartera) -->\r\n        <button (click)=\"goBack()\" class=\"text-white hover:underline flex items-center gap-1\">\r\n          <span class=\"material-icons\">arrow_back</span> Regresar\r\n        </button>\r\n\r\n        <button (click)=\"openAddModal()\"\r\n          class=\"bg-white text-sky-800 px-4 py-2 rounded-md shadow-md hover:bg-slate-200 transition font-semibold flex items-center gap-2\">\r\n          <span class=\"material-icons text-sky-800\">add</span> Agregar\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n<!-- Tabla de tareas -->\r\n<div class=\"overflow-x-auto\">\r\n  <table class=\"w-full min-w-[640px] border-collapse\">\r\n    <thead class=\"bg-gray-100\">\r\n      <tr class=\"border-b\">\r\n        <th class=\"py-4 px-6 text-left text-xs font-semibold uppercase text-gray-600\">Nombre</th>\r\n        <th class=\"py-4 px-6 text-left text-xs font-semibold uppercase text-gray-600\">Nota</th>\r\n        <th class=\"py-4 px-6 text-center text-xs font-semibold uppercase text-gray-600\">Fecha</th>\r\n        <th class=\"py-4 px-6 text-center text-xs font-semibold uppercase text-gray-600\">Estado</th>\r\n        <th class=\"py-4 px-6 text-center text-xs font-semibold uppercase text-gray-600\">Acciones</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let task of tasks\" class=\"border-b transition duration-300 hover:bg-gray-50\">\r\n        <td class=\"py-4 px-6 font-semibold\">{{ task.nombre }}</td>\r\n        <td class=\"py-4 px-6 text-gray-700\">\r\n          <!-- Mostrar los primeros 50 caracteres de la nota -->\r\n          <span>{{ task.nota && task.nota.length > 50 ? task.nota.slice(0, 50) + '...' : task.nota || '-' }}</span>\r\n          <!-- Botón para ver la nota completa -->\r\n          <button *ngIf=\"task.nota && task.nota.length > 50\" (click)=\"openNoteModal(task)\" class=\"text-blue-500 text-xs underline ml-2\">Ver más</button>\r\n        </td>\r\n        <td class=\"py-4 px-6 text-center\">\r\n          {{ task.fecha || '(por definir)' }}\r\n        </td>\r\n        <td class=\"py-4 px-6 text-center\">\r\n          <button (click)=\"toggleTaskStatus(task)\" class=\"px-3 py-1 text-xs font-semibold rounded-full transition duration-300\"\r\n            [ngClass]=\"{\r\n              'bg-sky-700 hover:bg-slate-700': task.estado === 'realizado',\r\n              'bg-orange-600 hover:bg-orange-700': task.estado === 'pendiente',\r\n              'bg-yellow-500 hover:bg-yellow-600': task.estado === 'para hoy',\r\n              'bg-red-600 hover:bg-red-700': task.estado === 'no realizado'\r\n            }\">\r\n            {{ task.estado }}\r\n          </button>\r\n        </td>\r\n        <td class=\"py-4 px-6 text-center\">\r\n          <button (click)=\"openEditModal(task)\" class=\"text-sky-700 text-xl\">\r\n            <span class=\"material-icons text-sky-700\">edit</span>\r\n          </button>\r\n          <button (click)=\"openDeleteModal(task)\" class=\"text-orange-600 text-xl\">\r\n            <span class=\"material-icons text-orange-600\">delete</span>\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<!-- Modal para agregar nueva tarea -->\r\n<div *ngIf=\"isAddModalOpen\" class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-40 z-50\">\r\n  <div class=\"bg-white p-6 rounded-lg shadow-lg w-96\">\r\n    <h2 class=\"text-xl font-bold mb-4\">Nueva Tarea</h2>\r\n\r\n    <!-- Campo: Nombre -->\r\n    <label class=\"block mb-1 font-medium\">Nombre:</label>\r\n    <input type=\"text\" [(ngModel)]=\"newTask.nombre\" class=\"w-full p-2 border rounded mb-4\" />\r\n\r\n    <!-- Campo: Nota -->\r\n    <label class=\"block mb-1 font-medium\">Nota adicional:</label>\r\n    <textarea [(ngModel)]=\"newTask.nota\" class=\"w-full p-2 border rounded mb-4\" rows=\"2\"></textarea>\r\n\r\n    <!-- Campo: Fecha -->\r\n    <label class=\"block mb-1 font-medium\">Fecha (día):</label>\r\n    <input type=\"date\" [(ngModel)]=\"newTask.fecha\" class=\"w-full p-2 border rounded mb-4\" />\r\n\r\n    <!-- Campo: Estado -->\r\n    <!-- <label class=\"block mb-1 font-medium\">Estado:</label>\r\n    <select [(ngModel)]=\"newTask.estado\" class=\"w-full p-2 border rounded mb-4\">\r\n      <option value=\"pendiente\">pendiente</option>\r\n      <option value=\"realizado\">realizado</option>\r\n      <option value=\"no realizado\">no realizado</option>\r\n      <option value=\"para hoy\">para hoy</option>\r\n    </select> -->\r\n\r\n    <!-- Acciones -->\r\n    <div class=\"flex justify-end gap-2\">\r\n      <button (click)=\"closeAddModal()\" class=\"px-4 py-2 border rounded-md hover:bg-slate-200\">Cancelar</button>\r\n      <button (click)=\"addTask()\"\r\n        class=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\">Agregar</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal para editar tarea -->\r\n<div *ngIf=\"isEditModalOpen\" class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-40 z-50\">\r\n  <div class=\"bg-white p-6 rounded-lg shadow-lg w-96\">\r\n    <h2 class=\"text-xl font-bold mb-4\">Editar Tarea</h2>\r\n\r\n    <!-- Campo: Nombre -->\r\n    <label class=\"block mb-1 font-medium\">Nombre:</label>\r\n    <input type=\"text\" [(ngModel)]=\"editedTask.nombre\" class=\"w-full p-2 border rounded mb-4\" />\r\n\r\n    <!-- Campo: Nota -->\r\n    <label class=\"block mb-1 font-medium\">Nota:</label>\r\n    <textarea [(ngModel)]=\"editedTask.nota\" class=\"w-full p-2 border rounded mb-4\" rows=\"2\"></textarea>\r\n\r\n    <!-- Campo: Fecha -->\r\n    <label class=\"block mb-1 font-medium\">Fecha:</label>\r\n    <input type=\"date\" [(ngModel)]=\"editedTask.fecha\" class=\"w-full p-2 border rounded mb-4\" />\r\n\r\n    <!-- Campo: Estado -->\r\n    <!-- <label class=\"block mb-1 font-medium\">Estado:</label>\r\n    <select [(ngModel)]=\"editedTask.estado\" class=\"w-full p-2 border rounded mb-4\">\r\n      <option value=\"pendiente\">pendiente</option>\r\n      <option value=\"realizado\">realizado</option>\r\n      <option value=\"no realizado\">no realizado</option>\r\n      <option value=\"para hoy\">para hoy</option>\r\n    </select> -->\r\n\r\n    <!-- Acciones -->\r\n    <div class=\"flex justify-end gap-2\">\r\n      <button (click)=\"closeEditModal()\" class=\"px-4 py-2 border rounded-md hover:bg-slate-200\">Cancelar</button>\r\n      <button (click)=\"saveTaskEdit()\" class=\"px-4 py-2 bg-sky-700 text-white rounded-md hover:bg-sky-800\">\r\n        Guardar\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal para eliminar tarea -->\r\n<div *ngIf=\"isDeleteModalOpen\" class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-40 z-50\">\r\n  <div class=\"bg-white p-6 rounded-lg shadow-lg w-80 text-center\">\r\n    <span class=\"material-icons text-red-600 mx-auto mb-4\" style=\"font-size: 48px;\">\r\n      report_problem\r\n    </span>\r\n    <h2 class=\"text-xl font-bold mt-4 mb-2\">¿Eliminar Tarea?</h2>\r\n    <p class=\"mb-6 text-gray-700\">¿Estás seguro de eliminar esta tarea? Esta acción no se puede deshacer.</p>\r\n    <div class=\"flex justify-center gap-2\">\r\n      <button (click)=\"closeDeleteModal()\" class=\"px-4 py-2 border rounded-md hover:bg-orange-200\">Cancelar</button>\r\n      <button (click)=\"confirmDeleteTask()\" class=\"px-4 py-2 bg-orange-600 text-white rounded-md hover:bg-red-600\">\r\n        Eliminar\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal para ver y editar la nota completa -->\r\n<div *ngIf=\"isNoteModalOpen\" class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-40 z-50\">\r\n  <div class=\"bg-white p-6 rounded-lg shadow-lg w-96\">\r\n    <h2 class=\"text-xl font-bold mb-4\">Editar Nota</h2>\r\n\r\n    <!-- Área de texto para editar la nota -->\r\n    <textarea [(ngModel)]=\"selectedTask.nota\" class=\"w-full p-2 border rounded mb-4\" rows=\"4\"></textarea>\r\n\r\n    <div class=\"flex justify-end gap-2\">\r\n      <button (click)=\"closeNoteModal()\" class=\"px-4 py-2 border rounded-md hover:bg-slate-200\">Cerrar</button>\r\n      <button (click)=\"saveNote()\" class=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\">Guardar</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}