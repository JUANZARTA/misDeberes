{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TaskService = /*#__PURE__*/(() => {\n  class TaskService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = 'https://tu-proyecto.firebaseio.com'; // üîÅ reemplaza por tu URL de Firebase\n    }\n    getUserId() {\n      const user = JSON.parse(localStorage.getItem('user') || '{}');\n      return user.localId || '';\n    }\n    getTasks(categoria) {\n      const userId = this.getUserId();\n      const year = new Date().getFullYear();\n      const month = String(new Date().getMonth() + 1).padStart(2, '0');\n      return this.http.get(`${this.baseUrl}/${userId}/${year}/${month}/categorias/${categoria}/tareas.json`).pipe(map(data => {\n        if (!data) return [];\n        return Object.entries(data).map(([id, value]) => ({\n          id,\n          ...value\n        }));\n      }));\n    }\n    addTask(categoria, task) {\n      const userId = this.getUserId();\n      const year = new Date().getFullYear();\n      const month = String(new Date().getMonth() + 1).padStart(2, '0');\n      return this.http.post(`${this.baseUrl}/${userId}/${year}/${month}/categorias/${categoria}/tareas.json`, task);\n    }\n    updateTask(categoria, id, task) {\n      const userId = this.getUserId();\n      const year = new Date().getFullYear();\n      const month = String(new Date().getMonth() + 1).padStart(2, '0');\n      return this.http.put(`${this.baseUrl}/${userId}/${year}/${month}/categorias/${categoria}/tareas/${id}.json`, task);\n    }\n    deleteTask(categoria, id) {\n      const userId = this.getUserId();\n      const year = new Date().getFullYear();\n      const month = String(new Date().getMonth() + 1).padStart(2, '0');\n      return this.http.delete(`${this.baseUrl}/${userId}/${year}/${month}/categorias/${categoria}/tareas/${id}.json`);\n    }\n    static #_ = this.…µfac = function TaskService_Factory(t) {\n      return new (t || TaskService)(i0.…µ…µinject(i1.HttpClient));\n    };\n    static #_2 = this.…µprov = /*@__PURE__*/i0.…µ…µdefineInjectable({\n      token: TaskService,\n      factory: TaskService.…µfac,\n      providedIn: 'root'\n    });\n  }\n  return TaskService;\n})();","map":{"version":3,"names":["map","TaskService","constructor","http","baseUrl","getUserId","user","JSON","parse","localStorage","getItem","localId","getTasks","categoria","userId","year","Date","getFullYear","month","String","getMonth","padStart","get","pipe","data","Object","entries","id","value","addTask","task","post","updateTask","put","deleteTask","delete","_","i0","…µ…µinject","i1","HttpClient","_2","factory","…µfac","providedIn"],"sources":["E:\\Golden Panda\\8) Programacion\\MisDeberes\\misDeberes\\src\\app\\services\\task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Task } from '../models/task.model';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TaskService {\r\n  private baseUrl = 'https://tu-proyecto.firebaseio.com'; // üîÅ reemplaza por tu URL de Firebase\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUserId(): string {\r\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n    return user.localId || '';\r\n  }\r\n\r\n  getTasks(categoria: string): Observable<Task[]> {\r\n    const userId = this.getUserId();\r\n    const year = new Date().getFullYear();\r\n    const month = String(new Date().getMonth() + 1).padStart(2, '0');\r\n\r\n    return this.http.get<{ [key: string]: Task }>(\r\n      `${this.baseUrl}/${userId}/${year}/${month}/categorias/${categoria}/tareas.json`\r\n    ).pipe(\r\n      map(data => {\r\n        if (!data) return [];\r\n        return Object.entries(data).map(([id, value]) => ({ id, ...value }));\r\n      })\r\n    );\r\n  }\r\n\r\n  addTask(categoria: string, task: Task): Observable<any> {\r\n    const userId = this.getUserId();\r\n    const year = new Date().getFullYear();\r\n    const month = String(new Date().getMonth() + 1).padStart(2, '0');\r\n\r\n    return this.http.post(\r\n      `${this.baseUrl}/${userId}/${year}/${month}/categorias/${categoria}/tareas.json`,\r\n      task\r\n    );\r\n  }\r\n\r\n  updateTask(categoria: string, id: string, task: Task): Observable<any> {\r\n    const userId = this.getUserId();\r\n    const year = new Date().getFullYear();\r\n    const month = String(new Date().getMonth() + 1).padStart(2, '0');\r\n\r\n    return this.http.put(\r\n      `${this.baseUrl}/${userId}/${year}/${month}/categorias/${categoria}/tareas/${id}.json`,\r\n      task\r\n    );\r\n  }\r\n\r\n  deleteTask(categoria: string, id: string): Observable<any> {\r\n    const userId = this.getUserId();\r\n    const year = new Date().getFullYear();\r\n    const month = String(new Date().getMonth() + 1).padStart(2, '0');\r\n\r\n    return this.http.delete(\r\n      `${this.baseUrl}/${userId}/${year}/${month}/categorias/${categoria}/tareas/${id}.json`\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}