{"ast":null,"code":"import { getDatabase, ref, set, get, remove } from 'firebase/database';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"./date.service\";\nimport * as i3 from \"@angular/common/http\";\nexport let TaskTypeService = /*#__PURE__*/(() => {\n  class TaskTypeService {\n    constructor(authService, dateService, http) {\n      this.authService = authService;\n      this.dateService = dateService;\n      this.http = http;\n      this.dbUrl = 'https://misdeberes-fac01-default-rtdb.firebaseio.com';\n      this.db = getDatabase();\n    }\n    getPath() {\n      const uid = this.authService.getUid();\n      const fecha = new Date();\n      const year = fecha.getFullYear();\n      const month = ('0' + (fecha.getMonth() + 1)).slice(-2);\n      return `/${uid}/${year}/${month}/categorias`;\n    }\n    // método para agregar tipo de tarea\n    addTaskType(nombre) {\n      const path = `${this.getPath()}/${nombre}`;\n      return set(ref(this.db, path), {\n        tareas: {}\n      });\n    }\n    // método para editar tipo de tarea\n    editTaskType(nombreAntiguo, nombreNuevo) {\n      const basePath = this.getPath();\n      const oldRef = ref(this.db, `${basePath}/${nombreAntiguo}`);\n      const newRef = ref(this.db, `${basePath}/${nombreNuevo}`);\n      return get(oldRef).then(snapshot => {\n        const data = snapshot.val();\n        return set(newRef, data).then(() => remove(oldRef));\n      });\n    }\n    // método para eliminar tipo de tarea\n    deleteTaskType(nombre) {\n      const path = `${this.getPath()}/${nombre}`;\n      return remove(ref(this.db, path));\n    }\n    static #_ = this.ɵfac = function TaskTypeService_Factory(t) {\n      return new (t || TaskTypeService)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.DateService), i0.ɵɵinject(i3.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TaskTypeService,\n      factory: TaskTypeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return TaskTypeService;\n})();","map":{"version":3,"names":["getDatabase","ref","set","get","remove","TaskTypeService","constructor","authService","dateService","http","dbUrl","db","getPath","uid","getUid","fecha","Date","year","getFullYear","month","getMonth","slice","addTaskType","nombre","path","tareas","editTaskType","nombreAntiguo","nombreNuevo","basePath","oldRef","newRef","then","snapshot","data","val","deleteTaskType","_","i0","ɵɵinject","i1","AuthService","i2","DateService","i3","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\Golden Panda\\8) Programacion\\MisDeberes\\misDeberes\\src\\app\\services\\taskType.service.ts"],"sourcesContent":["// Servicio para gestionar los tipos de tareas\r\nimport { Injectable } from '@angular/core';\r\nimport { getDatabase, ref, set, get, remove } from 'firebase/database';\r\nimport { AuthService } from './auth.service';\r\nimport { DateService } from './date.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskTypeService {\r\n  private dbUrl = 'https://misdeberes-fac01-default-rtdb.firebaseio.com';\r\n  private db = getDatabase();\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private dateService: DateService,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  private getPath(): string {\r\n    const uid = this.authService.getUid();\r\n    const fecha = new Date();\r\n    const year = fecha.getFullYear();\r\n    const month = ('0' + (fecha.getMonth() + 1)).slice(-2);\r\n    return `/${uid}/${year}/${month}/categorias`;\r\n  }\r\n\r\n  // método para agregar tipo de tarea\r\n  addTaskType(nombre: string): Promise<void> {\r\n    const path = `${this.getPath()}/${nombre}`;\r\n    return set(ref(this.db, path), { tareas: {} });\r\n  }\r\n\r\n  // método para editar tipo de tarea\r\n  editTaskType(nombreAntiguo: string, nombreNuevo: string): Promise<void> {\r\n    const basePath = this.getPath();\r\n    const oldRef = ref(this.db, `${basePath}/${nombreAntiguo}`);\r\n    const newRef = ref(this.db, `${basePath}/${nombreNuevo}`);\r\n\r\n    return get(oldRef).then(snapshot => {\r\n      const data = snapshot.val();\r\n      return set(newRef, data).then(() => remove(oldRef));\r\n    });\r\n  }\r\n\r\n  // método para eliminar tipo de tarea\r\n  deleteTaskType(nombre: string): Promise<void> {\r\n    const path = `${this.getPath()}/${nombre}`;\r\n    return remove(ref(this.db, path));\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,WAAW,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,QAAQ,mBAAmB;;;;;AAStE,WAAaC,eAAe;EAAtB,MAAOA,eAAe;IAI1BC,YACUC,WAAwB,EACxBC,WAAwB,EACxBC,IAAgB;MAFhB,KAAAF,WAAW,GAAXA,WAAW;MACX,KAAAC,WAAW,GAAXA,WAAW;MACX,KAAAC,IAAI,GAAJA,IAAI;MANN,KAAAC,KAAK,GAAG,sDAAsD;MAC9D,KAAAC,EAAE,GAAGX,WAAW,EAAE;IAMvB;IAEKY,OAAOA,CAAA;MACb,MAAMC,GAAG,GAAG,IAAI,CAACN,WAAW,CAACO,MAAM,EAAE;MACrC,MAAMC,KAAK,GAAG,IAAIC,IAAI,EAAE;MACxB,MAAMC,IAAI,GAAGF,KAAK,CAACG,WAAW,EAAE;MAChC,MAAMC,KAAK,GAAG,CAAC,GAAG,IAAIJ,KAAK,CAACK,QAAQ,EAAE,GAAG,CAAC,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;MACtD,OAAO,IAAIR,GAAG,IAAII,IAAI,IAAIE,KAAK,aAAa;IAC9C;IAEA;IACAG,WAAWA,CAACC,MAAc;MACxB,MAAMC,IAAI,GAAG,GAAG,IAAI,CAACZ,OAAO,EAAE,IAAIW,MAAM,EAAE;MAC1C,OAAOrB,GAAG,CAACD,GAAG,CAAC,IAAI,CAACU,EAAE,EAAEa,IAAI,CAAC,EAAE;QAAEC,MAAM,EAAE;MAAE,CAAE,CAAC;IAChD;IAEA;IACAC,YAAYA,CAACC,aAAqB,EAAEC,WAAmB;MACrD,MAAMC,QAAQ,GAAG,IAAI,CAACjB,OAAO,EAAE;MAC/B,MAAMkB,MAAM,GAAG7B,GAAG,CAAC,IAAI,CAACU,EAAE,EAAE,GAAGkB,QAAQ,IAAIF,aAAa,EAAE,CAAC;MAC3D,MAAMI,MAAM,GAAG9B,GAAG,CAAC,IAAI,CAACU,EAAE,EAAE,GAAGkB,QAAQ,IAAID,WAAW,EAAE,CAAC;MAEzD,OAAOzB,GAAG,CAAC2B,MAAM,CAAC,CAACE,IAAI,CAACC,QAAQ,IAAG;QACjC,MAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAG,EAAE;QAC3B,OAAOjC,GAAG,CAAC6B,MAAM,EAAEG,IAAI,CAAC,CAACF,IAAI,CAAC,MAAM5B,MAAM,CAAC0B,MAAM,CAAC,CAAC;MACrD,CAAC,CAAC;IACJ;IAEA;IACAM,cAAcA,CAACb,MAAc;MAC3B,MAAMC,IAAI,GAAG,GAAG,IAAI,CAACZ,OAAO,EAAE,IAAIW,MAAM,EAAE;MAC1C,OAAOnB,MAAM,CAACH,GAAG,CAAC,IAAI,CAACU,EAAE,EAAEa,IAAI,CAAC,CAAC;IACnC;IAAC,QAAAa,CAAA,G;uBAxCUhC,eAAe,EAAAiC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,UAAA;IAAA;IAAA,QAAAC,EAAA,G;aAAfzC,eAAe;MAAA0C,OAAA,EAAf1C,eAAe,CAAA2C,IAAA;MAAAC,UAAA,EAFd;IAAM;;SAEP5C,eAAe;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}