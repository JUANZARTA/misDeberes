{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"./date.service\";\nimport * as i3 from \"@angular/common/http\";\nexport let TaskTypeService = /*#__PURE__*/(() => {\n  class TaskTypeService {\n    constructor(authService, dateService, http) {\n      this.authService = authService;\n      this.dateService = dateService;\n      this.http = http;\n      this.dbUrl = 'https://misdeberes-fac01-default-rtdb.firebaseio.com';\n    }\n    getPath() {\n      const user = this.authService.getUser();\n      console.log('[USER]', user); // <-- ESTE LOG\n      const year = this.dateService.getSelectedYear();\n      const month = this.dateService.getSelectedMonth();\n      return `${this.dbUrl}/${user?.id}/${year}/${month}/categorias`;\n    }\n    getAllTaskTypes() {\n      const url = `${this.getPath()}.json`;\n      console.log('[GET] URL:', url);\n      return this.http.get(url).pipe(map(response => {\n        console.log('[GET] Response:', response);\n        return response ? Object.keys(response) : [];\n      }));\n    }\n    addTaskType(nombre) {\n      const url = `${this.getPath()}/${nombre}.json`;\n      console.log('[ADD] URL:', url);\n      return this.http.put(url, {\n        tareas: {}\n      });\n    }\n    deleteTaskType(nombre) {\n      const url = `${this.getPath()}/${nombre}.json`;\n      return this.http.delete(url);\n    }\n    editTaskType(oldName, newName) {\n      const path = this.getPath();\n      const oldUrl = `${path}/${oldName}.json`;\n      const newUrl = `${path}/${newName}.json`;\n      return this.http.get(oldUrl).pipe(map(data => {\n        return this.http.put(newUrl, data).subscribe(() => {\n          this.http.delete(oldUrl).subscribe();\n        });\n      }));\n    }\n    static #_ = this.ɵfac = function TaskTypeService_Factory(t) {\n      return new (t || TaskTypeService)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.DateService), i0.ɵɵinject(i3.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TaskTypeService,\n      factory: TaskTypeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return TaskTypeService;\n})();","map":{"version":3,"names":["map","TaskTypeService","constructor","authService","dateService","http","dbUrl","getPath","user","getUser","console","log","year","getSelectedYear","month","getSelectedMonth","id","getAllTaskTypes","url","get","pipe","response","Object","keys","addTaskType","nombre","put","tareas","deleteTaskType","delete","editTaskType","oldName","newName","path","oldUrl","newUrl","data","subscribe","_","i0","ɵɵinject","i1","AuthService","i2","DateService","i3","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\Golden Panda\\8) Programacion\\MisDeberes\\misDeberes\\src\\app\\services\\taskType.service.ts"],"sourcesContent":["// Servicio para gestionar tipos de tareas desde Firebase sin initializeApp\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { DateService } from './date.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskTypeService {\r\n  private dbUrl = 'https://misdeberes-fac01-default-rtdb.firebaseio.com';\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private dateService: DateService,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  private getPath() {\r\n    const user = this.authService.getUser();\r\n    console.log('[USER]', user); // <-- ESTE LOG\r\n\r\n    const year = this.dateService.getSelectedYear();\r\n    const month = this.dateService.getSelectedMonth();\r\n\r\n    return `${this.dbUrl}/${user?.id}/${year}/${month}/categorias`;\r\n  }\r\n\r\n\r\n  getAllTaskTypes() {\r\n    const url = `${this.getPath()}.json`;\r\n    console.log('[GET] URL:', url);\r\n    return this.http.get<{ [key: string]: any }>(url).pipe(\r\n      map(response => {\r\n        console.log('[GET] Response:', response);\r\n        return response ? Object.keys(response) : [];\r\n      })\r\n    );\r\n  }\r\n\r\n  addTaskType(nombre: string) {\r\n    const url = `${this.getPath()}/${nombre}.json`;\r\n    console.log('[ADD] URL:', url);\r\n    return this.http.put(url, { tareas: {} });\r\n  }\r\n\r\n  deleteTaskType(nombre: string) {\r\n    const url = `${this.getPath()}/${nombre}.json`;\r\n    return this.http.delete(url);\r\n  }\r\n\r\n  editTaskType(oldName: string, newName: string) {\r\n    const path = this.getPath();\r\n    const oldUrl = `${path}/${oldName}.json`;\r\n    const newUrl = `${path}/${newName}.json`;\r\n\r\n    return this.http.get(oldUrl).pipe(\r\n      map(data => {\r\n        return this.http.put(newUrl, data).subscribe(() => {\r\n          this.http.delete(oldUrl).subscribe();\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}