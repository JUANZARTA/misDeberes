{"ast":null,"code":"import { __decorate } from \"tslib\";\n// Componente para visualizar, agregar, editar y eliminar tipos de tarea en el Home\nimport { Component } from '@angular/core';\nlet HomeComponent = class HomeComponent {\n  constructor(tipoTareaService, router) {\n    this.tipoTareaService = tipoTareaService;\n    this.router = router;\n    this.tiposTarea = [];\n    this.isModalOpen = false;\n    this.nuevoTipo = '';\n  }\n  ngOnInit() {\n    this.obtenerTipos();\n  }\n  obtenerTipos() {\n    this.tipoTareaService.getTipos().subscribe(tipos => {\n      this.tiposTarea = tipos;\n    });\n  }\n  openModal() {\n    this.isModalOpen = true;\n  }\n  closeModal() {\n    this.isModalOpen = false;\n    this.nuevoTipo = '';\n  }\n  agregarTipo() {\n    if (this.nuevoTipo.trim()) {\n      this.tipoTareaService.agregarTipo(this.nuevoTipo).then(() => {\n        this.obtenerTipos();\n        this.closeModal();\n      });\n    }\n  }\n  ingresarTipo(tipo) {\n    this.router.navigate(['/app/category', tipo]);\n  }\n  editarTipo(tipo) {\n    const nuevoNombre = prompt('Editar nombre del tipo de tarea:', tipo);\n    if (nuevoNombre && nuevoNombre.trim()) {\n      this.tipoTareaService.editarTipo(tipo, nuevoNombre).then(() => {\n        this.obtenerTipos();\n      });\n    }\n  }\n  eliminarTipo(tipo) {\n    if (confirm(`¿Deseas eliminar el tipo de tarea \"${tipo}\"?`)) {\n      this.tipoTareaService.eliminarTipo(tipo).then(() => {\n        this.obtenerTipos();\n      });\n    }\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: []\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"names":["Component","HomeComponent","constructor","tipoTareaService","router","tiposTarea","isModalOpen","nuevoTipo","ngOnInit","obtenerTipos","getTipos","subscribe","tipos","openModal","closeModal","agregarTipo","trim","then","ingresarTipo","tipo","navigate","editarTipo","nuevoNombre","prompt","eliminarTipo","confirm","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\Golden Panda\\8) Programacion\\MisDeberes\\misDeberes\\src\\app\\pages\\home\\home.component.ts"],"sourcesContent":["// Componente para visualizar, agregar, editar y eliminar tipos de tarea en el Home\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TipoTareaService } from '../../services/tipo-tarea.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: []\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  tiposTarea: string[] = [];\r\n  isModalOpen = false;\r\n  nuevoTipo = '';\r\n\r\n  constructor(\r\n    private tipoTareaService: TipoTareaService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.obtenerTipos();\r\n  }\r\n\r\n  obtenerTipos(): void {\r\n    this.tipoTareaService.getTipos().subscribe((tipos: string[]) => {\r\n      this.tiposTarea = tipos;\r\n    });\r\n  }\r\n\r\n  openModal(): void {\r\n    this.isModalOpen = true;\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.isModalOpen = false;\r\n    this.nuevoTipo = '';\r\n  }\r\n\r\n  agregarTipo(): void {\r\n    if (this.nuevoTipo.trim()) {\r\n      this.tipoTareaService.agregarTipo(this.nuevoTipo).then(() => {\r\n        this.obtenerTipos();\r\n        this.closeModal();\r\n      });\r\n    }\r\n  }\r\n\r\n  ingresarTipo(tipo: string): void {\r\n    this.router.navigate(['/app/category', tipo]);\r\n  }\r\n\r\n  editarTipo(tipo: string): void {\r\n    const nuevoNombre = prompt('Editar nombre del tipo de tarea:', tipo);\r\n    if (nuevoNombre && nuevoNombre.trim()) {\r\n      this.tipoTareaService.editarTipo(tipo, nuevoNombre).then(() => {\r\n        this.obtenerTipos();\r\n      });\r\n    }\r\n  }\r\n\r\n  eliminarTipo(tipo: string): void {\r\n    if (confirm(`¿Deseas eliminar el tipo de tarea \"${tipo}\"?`)) {\r\n      this.tipoTareaService.eliminarTipo(tipo).then(() => {\r\n        this.obtenerTipos();\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAKxBC,YACUC,gBAAkC,EAClCC,MAAc;IADd,KAAAD,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAAC,MAAM,GAANA,MAAM;IANhB,KAAAC,UAAU,GAAa,EAAE;IACzB,KAAAC,WAAW,GAAG,KAAK;IACnB,KAAAC,SAAS,GAAG,EAAE;EAKX;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAYA,CAAA;IACV,IAAI,CAACN,gBAAgB,CAACO,QAAQ,EAAE,CAACC,SAAS,CAAEC,KAAe,IAAI;MAC7D,IAAI,CAACP,UAAU,GAAGO,KAAK;IACzB,CAAC,CAAC;EACJ;EAEAC,SAASA,CAAA;IACP,IAAI,CAACP,WAAW,GAAG,IAAI;EACzB;EAEAQ,UAAUA,CAAA;IACR,IAAI,CAACR,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,SAAS,GAAG,EAAE;EACrB;EAEAQ,WAAWA,CAAA;IACT,IAAI,IAAI,CAACR,SAAS,CAACS,IAAI,EAAE,EAAE;MACzB,IAAI,CAACb,gBAAgB,CAACY,WAAW,CAAC,IAAI,CAACR,SAAS,CAAC,CAACU,IAAI,CAAC,MAAK;QAC1D,IAAI,CAACR,YAAY,EAAE;QACnB,IAAI,CAACK,UAAU,EAAE;MACnB,CAAC,CAAC;IACJ;EACF;EAEAI,YAAYA,CAACC,IAAY;IACvB,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,eAAe,EAAED,IAAI,CAAC,CAAC;EAC/C;EAEAE,UAAUA,CAACF,IAAY;IACrB,MAAMG,WAAW,GAAGC,MAAM,CAAC,kCAAkC,EAAEJ,IAAI,CAAC;IACpE,IAAIG,WAAW,IAAIA,WAAW,CAACN,IAAI,EAAE,EAAE;MACrC,IAAI,CAACb,gBAAgB,CAACkB,UAAU,CAACF,IAAI,EAAEG,WAAW,CAAC,CAACL,IAAI,CAAC,MAAK;QAC5D,IAAI,CAACR,YAAY,EAAE;MACrB,CAAC,CAAC;IACJ;EACF;EAEAe,YAAYA,CAACL,IAAY;IACvB,IAAIM,OAAO,CAAC,sCAAsCN,IAAI,IAAI,CAAC,EAAE;MAC3D,IAAI,CAAChB,gBAAgB,CAACqB,YAAY,CAACL,IAAI,CAAC,CAACF,IAAI,CAAC,MAAK;QACjD,IAAI,CAACR,YAAY,EAAE;MACrB,CAAC,CAAC;IACJ;EACF;CACD;AA1DYR,aAAa,GAAAyB,UAAA,EALzB1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE;CACZ,CAAC,C,EACW5B,aAAa,CA0DzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}