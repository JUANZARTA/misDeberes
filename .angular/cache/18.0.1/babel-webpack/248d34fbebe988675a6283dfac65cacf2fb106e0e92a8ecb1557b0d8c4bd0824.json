{"ast":null,"code":"import { __decorate } from \"tslib\";\n// Componente para visualizar, agregar, editar y eliminar categorías de tareas en el Home\nimport { Component } from '@angular/core';\nlet HomeComponent = class HomeComponent {\n  constructor(categoriasService, router) {\n    this.categoriasService = categoriasService;\n    this.router = router;\n    this.categorias = [];\n    this.isModalOpen = false;\n    this.newCategory = '';\n  }\n  ngOnInit() {\n    this.obtenerCategorias();\n  }\n  obtenerCategorias() {\n    this.categoriasService.getCategorias().subscribe(categorias => {\n      this.categorias = categorias;\n    });\n  }\n  openModal() {\n    this.isModalOpen = true;\n  }\n  closeModal() {\n    this.isModalOpen = false;\n    this.newCategory = '';\n  }\n  addCategory() {\n    if (this.newCategory.trim()) {\n      this.categoriasService.agregarCategoria(this.newCategory).then(() => {\n        this.obtenerCategorias();\n        this.closeModal();\n      });\n    }\n  }\n  ingresarCategoria(categoria) {\n    this.router.navigate(['/app/category', categoria]);\n  }\n  editarCategoria(categoria) {\n    // lógica para editar el nombre de categoría\n    const nuevoNombre = prompt('Editar nombre de categoría:', categoria);\n    if (nuevoNombre && nuevoNombre.trim()) {\n      this.categoriasService.editarCategoria(categoria, nuevoNombre).then(() => {\n        this.obtenerCategorias();\n      });\n    }\n  }\n  eliminarCategoria(categoria) {\n    if (confirm(`¿Deseas eliminar la categoría \"${categoria}\"?`)) {\n      this.categoriasService.eliminarCategoria(categoria).then(() => {\n        this.obtenerCategorias();\n      });\n    }\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"names":["Component","HomeComponent","constructor","categoriasService","router","categorias","isModalOpen","newCategory","ngOnInit","obtenerCategorias","getCategorias","subscribe","openModal","closeModal","addCategory","trim","agregarCategoria","then","ingresarCategoria","categoria","navigate","editarCategoria","nuevoNombre","prompt","eliminarCategoria","confirm","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\Golden Panda\\8) Programacion\\MisDeberes\\misDeberes\\src\\app\\pages\\home\\home.component.ts"],"sourcesContent":["// Componente para visualizar, agregar, editar y eliminar categorías de tareas en el Home\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CategoriasService } from '../../services/categorias.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  categorias: string[] = [];\r\n  isModalOpen = false;\r\n  newCategory = '';\r\n\r\n  constructor(\r\n    private categoriasService: CategoriasService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.obtenerCategorias();\r\n  }\r\n\r\n  obtenerCategorias(): void {\r\n    this.categoriasService.getCategorias().subscribe((categorias: string[]) => {\r\n      this.categorias = categorias;\r\n    });\r\n  }\r\n\r\n  openModal(): void {\r\n    this.isModalOpen = true;\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.isModalOpen = false;\r\n    this.newCategory = '';\r\n  }\r\n\r\n  addCategory(): void {\r\n    if (this.newCategory.trim()) {\r\n      this.categoriasService.agregarCategoria(this.newCategory).then(() => {\r\n        this.obtenerCategorias();\r\n        this.closeModal();\r\n      });\r\n    }\r\n  }\r\n\r\n  ingresarCategoria(categoria: string): void {\r\n    this.router.navigate(['/app/category', categoria]);\r\n  }\r\n\r\n  editarCategoria(categoria: string): void {\r\n    // lógica para editar el nombre de categoría\r\n    const nuevoNombre = prompt('Editar nombre de categoría:', categoria);\r\n    if (nuevoNombre && nuevoNombre.trim()) {\r\n      this.categoriasService.editarCategoria(categoria, nuevoNombre).then(() => {\r\n        this.obtenerCategorias();\r\n      });\r\n    }\r\n  }\r\n\r\n  eliminarCategoria(categoria: string): void {\r\n    if (confirm(`¿Deseas eliminar la categoría \"${categoria}\"?`)) {\r\n      this.categoriasService.eliminarCategoria(categoria).then(() => {\r\n        this.obtenerCategorias();\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAKxBC,YACUC,iBAAoC,EACpCC,MAAc;IADd,KAAAD,iBAAiB,GAAjBA,iBAAiB;IACjB,KAAAC,MAAM,GAANA,MAAM;IANhB,KAAAC,UAAU,GAAa,EAAE;IACzB,KAAAC,WAAW,GAAG,KAAK;IACnB,KAAAC,WAAW,GAAG,EAAE;EAKb;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,iBAAiB,EAAE;EAC1B;EAEAA,iBAAiBA,CAAA;IACf,IAAI,CAACN,iBAAiB,CAACO,aAAa,EAAE,CAACC,SAAS,CAAEN,UAAoB,IAAI;MACxE,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC9B,CAAC,CAAC;EACJ;EAEAO,SAASA,CAAA;IACP,IAAI,CAACN,WAAW,GAAG,IAAI;EACzB;EAEAO,UAAUA,CAAA;IACR,IAAI,CAACP,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,WAAW,GAAG,EAAE;EACvB;EAEAO,WAAWA,CAAA;IACT,IAAI,IAAI,CAACP,WAAW,CAACQ,IAAI,EAAE,EAAE;MAC3B,IAAI,CAACZ,iBAAiB,CAACa,gBAAgB,CAAC,IAAI,CAACT,WAAW,CAAC,CAACU,IAAI,CAAC,MAAK;QAClE,IAAI,CAACR,iBAAiB,EAAE;QACxB,IAAI,CAACI,UAAU,EAAE;MACnB,CAAC,CAAC;IACJ;EACF;EAEAK,iBAAiBA,CAACC,SAAiB;IACjC,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,eAAe,EAAED,SAAS,CAAC,CAAC;EACpD;EAEAE,eAAeA,CAACF,SAAiB;IAC/B;IACA,MAAMG,WAAW,GAAGC,MAAM,CAAC,6BAA6B,EAAEJ,SAAS,CAAC;IACpE,IAAIG,WAAW,IAAIA,WAAW,CAACP,IAAI,EAAE,EAAE;MACrC,IAAI,CAACZ,iBAAiB,CAACkB,eAAe,CAACF,SAAS,EAAEG,WAAW,CAAC,CAACL,IAAI,CAAC,MAAK;QACvE,IAAI,CAACR,iBAAiB,EAAE;MAC1B,CAAC,CAAC;IACJ;EACF;EAEAe,iBAAiBA,CAACL,SAAiB;IACjC,IAAIM,OAAO,CAAC,kCAAkCN,SAAS,IAAI,CAAC,EAAE;MAC5D,IAAI,CAAChB,iBAAiB,CAACqB,iBAAiB,CAACL,SAAS,CAAC,CAACF,IAAI,CAAC,MAAK;QAC5D,IAAI,CAACR,iBAAiB,EAAE;MAC1B,CAAC,CAAC;IACJ;EACF;CACD;AA3DYR,aAAa,GAAAyB,UAAA,EALzB1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACW5B,aAAa,CA2DzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}